{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  postProduct(data) {\n    console.log();\n    return this.http.post(\"http://localhost:3000/\", data).pipe(map(res => {\n      return res;\n    }));\n  }\n  putProduct(data, id) {\n    return this.http.put(\"http://localhost:3000/\" + id, data).pipe(map(res => {\n      return res;\n    }));\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,UAAU;EAErBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;EAAiB;EAEzCC,WAAW,CAACC,IAAU;IACpBC,OAAO,CAACC,GAAG,EAAE;IACjB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,wBAAwB,EAACH,IAAI,CAAC,CACxDI,IAAI,CAACT,GAAG,CAAEU,GAAO,IAAG;MACnB,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACD;EAEAC,UAAU,CAACN,IAAU,EAACO,EAAU;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,wBAAwB,GAACD,EAAE,EAACP,IAAI,CAAC,CAC1DI,IAAI,CAACT,GAAG,CAAEU,GAAO,IAAG;MACnB,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACD;EAAC;qBAjBMT,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAa,SAAVb,UAAU;IAAAc,YAFT;EAAM","names":["map","ApiService","constructor","http","postProduct","data","console","log","post","pipe","res","putProduct","id","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\dell\\OneDrive\\Desktop\\projects\\product\\AngularCRUDProducts\\src\\app\\shared\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http : HttpClient) { }\n\n  postProduct(data : any){\n    console.log()\nreturn this.http.post<any>(\"http://localhost:3000/\",data)\n.pipe(map((res:any)=>{\n  return res;\n}))\n  }\n\n  putProduct(data : any,id: number){\n    return this.http.put<any>(\"http://localhost:3000/\"+id,data)\n    .pipe(map((res:any)=>{\n      return res;\n    }))\n      }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}